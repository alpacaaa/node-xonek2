// Generated by CoffeeScript 1.8.0
(function() {
  var Button, Component, Led,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Component = require('./base-component');

  Led = require('./led');

  Button = (function(_super) {
    __extends(Button, _super);

    Button.prototype.is_pressed = false;

    function Button(channel, button) {
      var position;
      this.led = new Led(channel, button);
      position = this.led.position[1];
      this.position_pressed = [158, position];
      this.position_released = [142, position];
    }

    Button.prototype.updateValue = function(value, msg) {
      var event;
      event = value === 1 ? 'press' : 'release';
      this.is_pressed = event === 'press';
      return this.emit(event, msg);
    };

    return Button;

  })(Component);

  module.exports = Button;

}).call(this);
